name: PlotTwist Frontend CI/CD Pipeline
# Task 011: Deployment Infrastructure

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  CACHE_NAME: cache-node-modules

jobs:
  # Continuous Integration
  test:
    name: Run Tests and Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm run test:coverage
        env:
          CI: true

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: frontend
          name: frontend-coverage

      - name: Build application
        run: npm run build
        env:
          CI: false
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          GENERATE_SOURCEMAP: false

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: build/
          retention-days: 7

  # Security and vulnerability scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium

  # Lighthouse performance audit
  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          CI: false
          REACT_APP_API_URL: https://api.plottwist.example.com

      - name: Serve and audit with Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  # Build and deploy
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          CI: false
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          GENERATE_SOURCEMAP: false

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /opt/plottwist
            
            # Pull latest code
            cd plottwist-frontend
            git pull origin main
            
            # Install dependencies
            npm ci
            
            # Build application
            npm run build
            
            # Restart frontend service
            sudo systemctl restart plottwist-frontend
            
            # Check service status
            sudo systemctl is-active plottwist-frontend
            
            echo "Frontend deployment completed successfully!"

      - name: Health check
        run: |
          sleep 30
          curl -f ${{ secrets.FRONTEND_URL }} || exit 1

      - name: Deploy to S3 (if using S3 for static assets)
        if: env.USE_S3 == 'true'
        run: |
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Notify deployment
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          fields: repo,message,commit,author,action,eventName,ref,workflow

  # Performance monitoring
  performance-monitoring:
    name: Performance Monitoring
    runs-on: ubuntu-latest
    needs: [build-and-deploy]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Wait for deployment
        run: sleep 60

      - name: Run Lighthouse audit on production
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ secrets.FRONTEND_URL }}
            ${{ secrets.FRONTEND_URL }}/login
            ${{ secrets.FRONTEND_URL }}/books
          configPath: './.lighthouserc.production.json'
          uploadArtifacts: true
          temporaryPublicStorage: true 